{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "allowedValues": [
        "West US",
        "East US",
        "West Europe",
        "North Europe",
        "East Asia",
        "Southeast Asia"
      ],
      "metadata": {
        "description": "The region to deploy the resources into"
      }
    },

    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },

    "sharedKey": {
      "type": "string",
      "metadata": {
        "description": "Shared key (PSK) for IPSec tunnel"
      }
    },

    "vaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Recovery Services Vault"
      }
    },
    "policyName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Backup Policy"
      }
    },
    "scheduleRunDays": {
      "type": "array",
      "metadata": {
        "description": "Backup Schedule will run on array of Days like, Monday, Tuesday etc. Applies in Weekly Backup Type only."
      }
    },
    "scheduleRunTimes": {
      "type": "array",
      "metadata": {
        "description": "Times in day when backup should be triggered. e.g. 01:00, 13:00. This will be used in LTR too for daily, weekly, monthly and yearly backup."
      }
    },
    "weeklyRetentionDurationCount": {
      "type": "int",
      "metadata": {
        "description": "Number of weeks you want to retain the backup"
      }
    },
    "daysOfTheWeekForMontlyRetention": {
      "type": "array",
      "metadata": {
        "description": "Array of Days for Monthly Retention (Min One or Max all values from scheduleRunDays, but not any other days which are not part of scheduleRunDays)"
      }
    },
    "weeksOfTheMonthForMonthlyRetention": {
      "type": "array",
      "metadata": {
        "description": "Array of Weeks for Monthly Retention - First, Second, Third, Fourth, Last"
      }
    },
    "monthlyRetentionDurationCount": {
      "type": "int",
      "metadata": {
        "description": "Number of months you want to retain the backup"
      }
    },
    "monthsOfYear": {
      "type": "array",
      "metadata": {
        "description": "Array of Months for Yearly Retention"
      }
    },
    "daysOfTheWeekForYearlyRetention": {
      "type": "array",
      "metadata": {
        "description": "Array of Days for Yearly Retention (Min One or Max all values from scheduleRunDays, but not any other days which are not part of scheduleRunDays)"
      }
    },
    "weeksOfTheMonthForYearlyRetention": {
      "type": "array",
      "metadata": {
        "description": "Array of Weeks for Yearly Retention - First, Second, Third, Fourth, Last"
      }
    },
    "yearlyRetentionDurationCount": {
      "type": "int",
      "metadata": {
        "description": "Number of years you want to retain the backup"
      }
    },

    "skuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the vault"
      }
    },

    "numberOfwebInstances": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of web instances"
      }
    },


    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Virtual Network to Create"
      }


    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "domainName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Domain Name for the Forest."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Globally unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "dnsNameForLB": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Globally unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },

    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },

    "bdcName": {
      "type": "string",
      "minLength": 1
    },
    "fileserver2Name": {
      "type": "string",
      "minLength": 1
    },
    "fileserver3Name": {
      "type": "string",
      "minLength": 1
    },
    "workspaceId": {
      "type": "string",
      "metadata": {
        "description": "The Workspace ID is the Operations Management Suite Workspace ID found in the OMS Console under Settings and Connected Sources"
      }
    },
    "workspaceKey": {
      "type": "string",
      "metadata": {
        "description": "The Workspace Key is the Operations Management Suite Workspace Key found in the OMS Console under Settings and Connected Sources"
      }
    }
  },
  "variables": {
    "imagePublisher": "MicrosoftWindowsServer",
    "adNicIPAddress": "10.2.0.44",
    "fsnicipaddress": "10.2.0.56",
    "bdcnicipaddress": "10.2.0.66",
    "imageOffer": "WindowsServer",
    "OSDiskName": "osdiskforwindowssimple",
    "nicName": "dcnic",
    "addressPrefix": "10.2.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.2.0.0/24",
    "vhdStorageType": "Standard_LRS",
    "publicIPAddressName": "Ipforjumpbox",
    "publicIpRef": "loadbalancerip",
    "publicIPAddressType": "Dynamic",
    "vhdStorageContainerName": "vhds",
    "AvailabilitysetName": "webserverset",
    "vmName": "dc",
    "vmSize": "Standard_A2",
    "virtualNetworkName": "LawranceNET",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "vhdStorageName": "[concat('vhdstorage', uniqueString(resourceGroup().id))]",
    "diagnosticsStorageAccountName": "[variables('vhdStorageName')]",
    "diagnosticsStorageAccountResourceGroup": "[resourcegroup().name]",
    "accountid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('diagnosticsStorageAccountResourceGroup'), '/providers/', 'Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",
    "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'), variables('wadperfcounters1'), variables('wadperfcounters2'), '<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('diagnosticsStorageAccountResourceGroup'), '/providers/', 'Microsoft.Compute/virtualMachines/', variables('vmName'))]",
    "wadcfgxend": "><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>",
    "dscDCConfigurationFunction": "dscDCConfiguration.ps1\\Main",
    "bdcOSDiskName": "bdcOSDisk",
    "bdcVnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "bdcStorageAccountContainerName": "vhds",
    "bdcNicName": "[concat(parameters('bdcName'), 'NetworkInterface')]",
    "dscbdcConfigurationFunction": "dscDCConfiguration.ps1\\bdc",
    "fileserver2OSDiskName": "fileserver2OSDisk",
    "fileserverVmSize": "Standard_D1",
    "fileavailabilitysetName": "fileavailset",
    "fileserver2VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "fileserver2StorageAccountContainerName": "vhds",
    "fileserver2NicName": "[concat(parameters('fileserver2Name'), 'NetworkInterface')]",
    "webOSDiskName": "webOSDisk",
    "webVnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "webStorageAccountContainerName": "vhds",
    "webservicedscConfigurationFunction": "dscDCConfiguration.ps1\\web",
    "backupFabric": "Azure",
    "protectedItemType": "Microsoft.ClassicCompute/virtualMachines",
    "resourcegroup": "[resourceGroup().name]",
    "vmresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('ResourceGroup'), '/providers/', 'Microsoft.Compute/virtualMachines/', variables('vmname'))]",
    "fsvmresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('ResourceGroup'), '/providers/', 'Microsoft.Compute/virtualMachines/', parameters('fileserver2name'))]",
    "container": "[concat('iaasvmcontainer;iaasvmcontainerv2;',variables('resourcegroup'),';',variables('vmname'))]",
    "vmcontainer": "[concat('vm;iaasvmcontainerv2;',variables('resourcegroup'),';',variables('vmname'))]",
    "fscontainer": "[concat('iaasvmcontainer;iaasvmcontainerv2;',variables('resourcegroup'),';',parameters('fileserver2name'))]",
    "fsvmcontainer": "[concat('vm;iaasvmcontainerv2;',variables('resourcegroup'),';',parameters('fileserver2name'))]",
    "vpntype": "RouteBased",
    "localGatewayName": "localGateway",
    "assetlocation": "https://raw.githubusercontent.com/bytezn/softwaredefined/master/fsdswebvltplcmultibkups2sbaldfs-gthub",
    "lbname": "loadbalancer",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/LBBAP')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "localGatewayIpAddress": "1.1.1.1",
    "localAddressPrefix": "172.20.0.0/16",
    "azureVNetAddressPrefix": "10.2.0.0/16",
    "gatewaySubnetPrefix": "10.2.200.0/29",
    "gatewayPublicIPName": "azureGatewayIP",
    "gatewayName": "azureGateway",
    "dnsNameForLB": "dnsforlb",
    "gatewaySku": "Basic",
    "connectionname": "sitetosite",
    "gatewaySubnetRef": "[concat(variables('vnetID'),'/subnets/','GatewaySubnet')]",
    "fileserver3OSDiskName": "fileserver3OSDisk",
    "fileserver3VmSize": "Standard_D1",
    "fileserver3VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "fileserver3SubnetRef": "[concat(variables('fileserver3VnetID'), '/subnets/', variables('subnetName'))]",
    "fileserver3StorageAccountContainerName": "vhds",
    "fileserver3NicName": "[concat(parameters('fileserver3Name'), 'NetworkInterface')]",
    "fileserver2dscConfigurationFunction": "dscDCConfiguration.ps1\\fileserver2",
    "fileserver3dscConfigurationFunction": "dscDCConfiguration.ps1\\fileserver3",
    "test1ConfigurationFunction": "test1Configuration.ps1\\Main"

  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('vhdStorageName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[variables('vhdStorageType')]"
      }
    },
    {
      "type": "Microsoft.RecoveryServices/vaults",
      "apiVersion": "2015-11-10",
      "dependson": [

      ],
      "name": "[parameters('vaultName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "properties": {
      }

    },
    {
      "apiVersion": "2015-11-10",
      "name": "[concat(parameters('vaultName'), '/', parameters('policyName'))]",
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
      "dependsOn": [
        "[concat('Microsoft.RecoveryServices/vaults/', parameters('vaultName'))]"

      ],
      "location": "[resourceGroup().location]",
      "properties": {
        "backupManagementType": "AzureIaasVM",
        "schedulePolicy": {
          "scheduleRunFrequency": "Weekly",
          "scheduleRunDays": "[parameters('scheduleRunDays')]",
          "scheduleRunTimes": "[parameters('scheduleRunTimes')]",
          "scheduleRunTimesNew": [ ],
          "schedulePolicyType": "SimpleSchedulePolicy"
        },
        "retentionPolicy": {
          "dailySchedule": null,
          "weeklySchedule": {
            "daysOfTheWeek": "[parameters('scheduleRunDays')]",
            "retentionTimes": "[parameters('scheduleRunTimes')]",
            "retentionTimesNew": [ ],
            "retentionDuration": {
              "count": "[parameters('weeklyRetentionDurationCount')]",
              "durationType": "Weeks"
            }
          },
          "monthlySchedule": {
            "retentionScheduleFormatType": "Weekly",
            "retentionScheduleDaily": {
              "daysOfTheMonth": [
                {
                  "date": 1,
                  "isLast": false
                }
              ]
            },
            "retentionScheduleWeekly": {
              "daysOfTheWeek": "[parameters('daysOfTheWeekForMontlyRetention')]",
              "weeksOfTheMonth": "[parameters('weeksOfTheMonthForMonthlyRetention')]"
            },
            "retentionTimes": "[parameters('scheduleRunTimes')]",
            "retentionTimesNew": [ ],
            "retentionDuration": {
              "count": "[parameters('monthlyRetentionDurationCount')]",
              "durationType": "Months"
            }
          },
          "yearlySchedule": {
            "retentionScheduleFormatType": "Weekly",
            "monthsOfYear": "[parameters('monthsOfYear')]",
            "retentionScheduleDaily": {
              "daysOfTheMonth": [
                {
                  "date": 1,
                  "isLast": false
                }
              ]
            },
            "retentionScheduleWeekly": {
              "daysOfTheWeek": "[parameters('daysOfTheWeekForYearlyRetention')]",
              "weeksOfTheMonth": "[parameters('weeksOfTheMonthForYearlyRetention')]"
            },
            "retentionTimes": "[parameters('scheduleRunTimes')]",
            "retentionTimesNew": [ ],
            "retentionDuration": {
              "count": "[parameters('yearlyRetentionDurationCount')]",
              "durationType": "Years"
            }
          },
          "retentionPolicyType": "LongTermRetentionPolicy"
        }
      }

    },

    {
      "name": "[concat(parameters('vaultname'), '/', variables('backupFabric'), '/', variables('container'), '/', variables('vmcontainer'))]",
      "apiVersion": "2015-11-10",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmname'),'/extensions/dscDC')]"

      ],
      "location": "[resourceGroup().location]",
      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
      "properties": {
        "protectedItemType": "[variables('protectedItemType')]",
        "policyName": "[parameters('policyName')]",
        "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('VaultName'), parameters('PolicyName'))]",
        "sourceResourceId": "[variables('vmresourceid')]"
      }

    },

    {
      "name": "[concat(parameters('vaultname'), '/', variables('backupFabric'), '/', variables('fscontainer'), '/', variables('fsvmcontainer'))]",
      "apiVersion": "2015-11-10",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('fileserver2name'),'/extensions/fileserverdj2')]"

      ],
      "location": "[resourceGroup().location]",
      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
      "properties": {
        "protectedItemType": "[variables('protectedItemType')]",
        "policyName": "[parameters('policyName')]",
        "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('VaultName'), parameters('PolicyName'))]",
        "sourceResourceId": "[variables('fsvmresourceid')]"
      }

    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIpRef')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForLB')]"
        }
      }
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers",
      "name": "loadBalancer",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIpRef'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"




      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LBFE",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpRef'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LBBAP"
          }
        ],
        "inboundNatRules": [
          {
            "name": "https",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false
            }
          },
          {
            "name": "gateway",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "protocol": "udp",
              "frontendPort": 3391,
              "backendPort": 3391,
              "enableFloatingIP": false
            }
          }
        ],

        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          }
        ],

        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "dcnic"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('adnicipaddress')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "dc"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('diagnosticsStorageAccountName'), '.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "name": "dscDC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "tags": {
            "displayName": "dscDC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[concat(variables('assetlocation'), '/', 'dscDCConfiguration.ps1.zip')]",
              "configurationFunction": "[variables('dscDCConfigurationFunction')]",
              "properties": {
                "nodeName": "[variables('vmName')]",
                "domainName": "[parameters('domainName')]",
                "domainAdminCredentials": {
                  "UserName": "[parameters('adminUserName')]",
                  "Password": "PrivateSettingsRef:Password"
                }
              }
            },
            "protectedSettings": {
              "items": {
                "Password": "[parameters('adminPassword')]"
              }
            }
          }
        }

      ]
    },
    {
      "name": "[variables('bdcNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "bdcNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('bdcnicipaddress')]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [ "10.2.0.44" ]

        }
      }
    },
    {
      "name": "[parameters('bdcName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('bdcNicName'))]"
      ],
      "tags": {
        "displayName": "bdc"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('bdcName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "bdcOSDisk",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('bdcStorageAccountContainerName'), '/', variables('bdcOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('bdcNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "dscbdc",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('bdcname'))]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmname'),'/extensions/dscDC')]",
            "Microsoft.Compute/virtualMachines/dc/extensions/dscDC"
          ],
          "tags": {
            "displayName": "dscbdc"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[concat(variables('assetlocation'), '/', 'dscDCConfiguration.ps1.zip')]",
              "configurationFunction": "[variables('dscbdcConfigurationFunction')]",
              "properties": {
                "domainName": "[parameters('domainName')]",
                "domainAdminCredentials": {
                  "UserName": "[parameters('adminUserName')]",
                  "Password": "PrivateSettingsRef:Password"
                }
              }
            },
            "protectedSettings": {
              "items": {
                "Password": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "name": "[variables('fileserver2NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "fileserverNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('fsnicipaddress')]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],

        "dnsSettings": {
          "dnsServers": [ "10.2.0.44" ]
        }
      }

    },

    {
      "name": "[parameters('fileserver2Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('fileserver2NicName'))]"
      ],
      "tags": {
        "displayName": "fileserver"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('fileavailabilitysetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('fileserver2Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "fileserverOSDisk",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('fileserver2StorageAccountContainerName'), '/', variables('fileserver2OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fileserver2NicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "type": "extensions",
          "name": "fileserverdj2",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('fileserver2name'))]",
            "Microsoft.Compute/virtualMachines/dc/extensions/dscDC"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "Name": "[parameters('DomainName')]",
              "User": "[concat(parameters('DomainName'), '\\', parameters('adminUserName'))]",
              "Restart": "true",
              "Options": "3"
            },
            "protectedsettings": {
              "Password": "[parameters('adminPassword')]"
            }
          }
        },
        {
          "type": "extensions",
          "name": "fileserver2dsc",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('fileserver2name'))]",
            "[concat('Microsoft.Compute/virtualMachines/', parameters('fileserver2name'),'/extensions/fileserverdj2')]"
           ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[concat(variables('assetlocation'), '/', 'dscDCConfiguration.ps1.zip')]",
              "configurationFunction": "[variables('fileserver2dscConfigurationFunction')]",
              "Properties": {
                "domainName": "[parameters('DomainName')]",
                "domainAdminCredentials": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:adminPassword"
                }

              }
            },
            "protectedSettings": {
              "Items": {
                "adminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        },
          {
              "name": "Microsoft.EnterpriseCloud.Monitoring",
              "type": "extensions",
              "location": "[resourceGroup().location]",
              "apiVersion": "2015-06-15",
              "dependsOn": [
                  "[concat('Microsoft.Compute/virtualMachines/', parameters('fileserver2Name'))]"
              ],
              "tags": {
                  "displayName": "fileserveroms"
              },
              "properties": {
                  "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                  "type": "MicrosoftMonitoringAgent",
                  "typeHandlerVersion": "1.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                      "workspaceId": "[parameters('workspaceId')]"
                  },
                  "protectedSettings": {
                      "workspaceKey": "[parameters('workspaceKey')]"
                  }
              }
          }
      ]

    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('web-', copyindex(), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "web-nic-loop",
        "count": "[parameters('numberOfwebInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "Microsoft.Network/loadBalancers/loadBalancer"


      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBAP')]"
                }
              ]
            }
          }
        ],

        "dnsSettings": {
          "dnsServers": [ "10.2.0.44" ]
        }
      }

    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('web-', copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "web-vm-loop",
        "count": "[parameters('numberOfwebInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdstorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'web-', copyindex(), '-nic')]"
      ],
            "properties": {
                  "availabilitySet": {
                  "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('AvailabilitysetName'))]"
                },
              "hardwareProfile": {
                "vmSize": "[variables('vmSize')]"
              },
                  "osProfile": {
                    "computerName": "[concat('web-', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                  },
              "storageProfile": {

                "imageReference": {
                  "publisher": "[variables('imagePublisher')]",
                  "offer": "[variables('imageOffer')]",
                  "sku": "[parameters('windowsOSVersion')]",
                  "version": "latest"
                },

                "osDisk": {
                  "name": "osdisk",
                  "vhd": {
                    "uri": "[concat('http://',variables('vhdstoragename'),'.blob.core.windows.net/vhds/web-',copyindex(),'-osdisk.vhd')]"
                  },
                  "caching": "ReadWrite",
                  "createOption": "FromImage"
                }
                                          
              },
                  "networkProfile": {
                    "networkInterfaces": [
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('web-', copyindex(), '-nic'))]"
                      }
                    ]
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2015-06-15",
                    "type": "extensions",
                    "name": "webdsc",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "Microsoft.Compute/virtualMachines/dc/extensions/dscDC",
                      "[resourceId('Microsoft.Compute/virtualMachines', concat('web-', copyindex()))]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Compute",
                      "type": "JsonADDomainExtension",
                      "typeHandlerVersion": "1.0",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "Name": "[parameters('DomainName')]",
                        "User": "[concat(parameters('DomainName'), '\\', parameters('adminUserName'))]",
                        "Restart": "true",
                        "Options": "3"
                      },
                      "protectedsettings": {
                        "Password": "[parameters('adminPassword')]"
                      }
                    }
                  },
                  {
                    "name": "webservicedsc",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2015-06-15",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines', concat('web-', copyindex()))]",
                      "Microsoft.Compute/virtualMachines/dc/extensions/dscDC",
                      "[concat('Microsoft.Compute/virtualMachines/','web-', copyindex(),'/extensions/webdsc')]"


                    ],
                    "tags": {
                      "displayName": "webservicedscDC"
                    },
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "modulesUrl": "[concat(variables('assetlocation'), '/', 'dscDCConfiguration.ps1.zip')]",
                        "configurationFunction": "[variables('webservicedscConfigurationFunction')]",
                        "properties": {
                          "domainName": "[parameters('domainName')]",
                          "domainAdminCredentials": {
                            "UserName": "[parameters('adminUserName')]",
                            "Password": "PrivateSettingsRef:Password"
                          }
                        }
                      },
                      "protectedSettings": {
                        "items": {
                          "Password": "[parameters('adminPassword')]"
                        }
                      }
                    }
                  }
                ]

              },
      
    
    {
      "name": "sitesite",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/bytezn/softwaredefined/master/fileservermultidjmultibackupsitetosite/sitetosite.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vpntype": {
            "value": "[variables('vpntype')]"
          },
          "localGatewayName": {
            "value": "[variables('localGatewayName')]"
          },
          "localGatewayIpAddress": {
            "value": "[variables('localGatewayIpAddress')]"
          },
          "localAddressPrefix": {
            "value": "[variables('localAddressPrefix')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "azureVNetAddressPrefix": {
            "value": "[variables('azureVNetAddressPrefix')]"
          },
          "subnetName": {
            "value": "[variables('subnetName')]"
          },
          "subnetPrefix": {
            "value": "[variables('subnetPrefix')]"
          },
          "gatewaySubnetPrefix": {
            "value": "[variables('gatewaySubnetPrefix')]"
          },
          "gatewayPublicIPName": {
            "value": "[variables('gatewayPublicIPName')]"
          },
          "gatewayName": {
            "value": "[variables('gatewayName')]"
          },
          "connectionName": {
            "value": "[variables('connectionName')]"
          },
          "sharedKey": {
            "value": "[parameters('sharedKey')]"
          }


        }
      }

    },
      {
          "name": "[variables('AvailabilitysetName')]",
          "type": "Microsoft.Compute/availabilitySets",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [ ],
          "tags": {
              "displayName": "webavailabilityset"
          },
          "properties": {
              "platformUpdateDomainCount": 1,
              "platformFaultDomainCount": 1
          }
      },
      {
          "name": "[variables('fileserver3NicName')]",
          "type": "Microsoft.Network/networkInterfaces",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
              "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
          ],
          "tags": {
              "displayName": "fileserver3Nic"
          },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('fileserver3SubnetRef')]"
                }
              }
            }
          ],
          "dnsSettings": {
            "dnsServers": [ "10.2.0.44" ]
          }

        }
      },
      {
          "name": "[parameters('fileserver3Name')]",
          "type": "Microsoft.Compute/virtualMachines",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
              "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
              "[concat('Microsoft.Network/networkInterfaces/', variables('fileserver3NicName'))]"
          ],
          "tags": {
              "displayName": "fileserver3"
          },
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('fileavailabilitysetName'))]"
          },

          "hardwareProfile": {
            "vmSize": "[variables('fileserver3VmSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('fileserver3Name')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[parameters('windowsOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "fileserver3OSDisk",
              "vhd": {
                "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('fileserver3StorageAccountContainerName'), '/', variables('fileserver3OSDiskName'), '.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fileserver3NicName'))]"
              }
            ]
          }
        },
        "resources": [
          {
            "apiVersion": "2015-06-15",
            "type": "extensions",
            "name": "fileserverdj3",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('fileserver3name'))]",
              "Microsoft.Compute/virtualMachines/dc/extensions/dscDC"
            ],
            "properties": {
              "publisher": "Microsoft.Compute",
              "type": "JsonADDomainExtension",
              "typeHandlerVersion": "1.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "Name": "[parameters('DomainName')]",
                "User": "[concat(parameters('DomainName'), '\\', parameters('adminUserName'))]",
                "Restart": "true",
                "Options": "3"
              },
              "protectedsettings": {
                "Password": "[parameters('adminPassword')]"
              }
            }
          },
          {
            "type": "extensions",
            "name": "fileserver3dsc",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('fileserver3name'))]",
              "[concat('Microsoft.Compute/virtualMachines/', parameters('fileserver3name'),'/extensions/fileserverdj3')]",
              "[concat('Microsoft.Compute/virtualMachines/', parameters('fileserver2name'),'/extensions/fileserver2dsc')]"
            ],
            "properties": {
              "publisher": "Microsoft.Powershell",
              "type": "DSC",
              "typeHandlerVersion": "2.11",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "modulesUrl": "[concat(variables('assetlocation'), '/', 'dscDCConfiguration.ps1.zip')]",
                "configurationFunction": "[variables('fileserver3dscConfigurationFunction')]",
                "Properties": {
                  "domainName": "[parameters('DomainName')]",
                  "domainAdminCredentials": {
                    "UserName": "[parameters('adminUsername')]",
                    "Password": "PrivateSettingsRef:adminPassword"
                  }

                }
              },
              "protectedSettings": {
                "Items": {
                  "adminPassword": "[parameters('adminPassword')]"
                }
              }
            }
          },
            {
                "name": "Microsoft.EnterpriseCloud.Monitoring",
                "type": "extensions",
                "location": "[resourceGroup().location]",
                "apiVersion": "2015-06-15",
                "dependsOn": [
                    "[concat('Microsoft.Compute/virtualMachines/', parameters('fileserver3Name'))]"
                ],
                "tags": {
                    "displayName": "fileserver3oms"
                },
                "properties": {
                    "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                    "type": "MicrosoftMonitoringAgent",
                    "typeHandlerVersion": "1.0",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                        "workspaceId": "[parameters('workspaceId')]"
                    },
                    "protectedSettings": {
                        "workspaceKey": "[parameters('workspaceKey')]"
                    }
                }
            }
        ]
      },
      {
          "name": "[variables('fileavailabilitysetName')]",
          "type": "Microsoft.Compute/availabilitySets",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [ ],
          "tags": {
              "displayName": "fileavailabilityset"
          },
          "properties": {
              "platformUpdateDomainCount": 1,
              "platformFaultDomainCount": 1
          }
      }
  ]}


    
 
    
  

      
  

  


      
        
      
    
  
  
 

  

        
        
    
  

